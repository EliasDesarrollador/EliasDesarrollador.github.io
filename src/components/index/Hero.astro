---
import IconChevronDown from "../../icons/IconChevronDown.astro";
import IconMoon from "../../icons/IconMoon.astro";
import IconShare2 from "../../icons/IconShare2.astro";
import IconSun from "../../icons/IconSun.astro";
import HeroButton from "../HeroButton.astro";
---

<div>
  <div class="flex justify-between">
    <img
      class="rounded-full size-24 border
      border-hub-border
      dark:border-hub-border-dark
      dark:bg-hub-background-nav-dark
      hover:dark:bg-hub-background-nav"
      src="src/assets/img/notion/white/my-notion-face-transparent.png"
      alt="Descripción de la imagen"
    />
    <div class="flex gap-2 flex-wrap">
      <!-- <HeroButton class="size-8">
        <IconShare2 class="size-5" />
      </HeroButton> -->

      <HeroButton id="toggle-theme" class="size-8">
        <IconSun class="size-5 dark:hidden" />
        <IconMoon class="size-5 hidden dark:inline" />
      </HeroButton>
    </div>
  </div>
  <div class="mt-4">
    <h1 class="font-medium text-2xl text-hub-title dark:text-hub-title-dark">
      Edison Cruz
    </h1>
    <p class="text-base text-hub-subtitle dark:text-hub-subtitle-dark">
      Software Engineer
    </p>
  </div>
</div>

<script>
  const themeToggle = document.getElementById("toggle-theme");
  const htmlElement = document.documentElement;

  // Detectar el esquema de color del sistema y aplicarlo al cargar la página
  const preferredTheme = window.matchMedia("(prefers-color-scheme: dark)")
    .matches
    ? "dark"
    : "light";
  if (preferredTheme === "dark") {
    htmlElement.classList.add("dark");
  } else {
    htmlElement.classList.remove("dark");
  }

  // Escuchar cambios en el esquema de color del sistema
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => {
      if (event.matches) {
        htmlElement.classList.add("dark");
      } else {
        htmlElement.classList.remove("dark");
      }
    });

  // Alternar el tema manualmente con el botón
  if (themeToggle) {
    themeToggle.addEventListener("click", () => {
      htmlElement.classList.toggle("dark");
    });
  }
</script>
